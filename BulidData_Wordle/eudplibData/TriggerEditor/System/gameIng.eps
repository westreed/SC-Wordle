import System.word as sw;
import System.keyInput as ski;
import System.keyboard as skb;
import Player.scoreBoard as psb;
import Player.opening as po;
import variables as v;

const t = StringBuffer();
var   gameStep          = 0;
var   gameDelay         = 0;
var   nextIndex         = 0;
const duplicateQuestion = EUDArray(100);


function newQuestion(){
    while(true){
        var check = true;
        const rand = 1 + dwrand() % sw.wordMAX;
        for (var i=0; i<nextIndex; i++){
            if(MemoryEPD(EPD(duplicateQuestion)+i, Exactly, rand)){
                check = false;
                break;
            }
        }
        if(check){
            duplicateQuestion[nextIndex] = rand;
            nextIndex++;
            SetVariables(ski.question, rand-1);
            gameStep += 1;
            break;
        }
    }
}

function removeText(){
    setcurpl(getuserplayerid());
    t.print("\n\n\n\n\n\n\n\n\n\n\n");
    setcurpl(v.superUser);
}

function gameSystem(){
    v.mainPlayer();
    if(gameStep == 0){
        po.openingText();
    }
    else if(gameStep == 1){
        newQuestion();
        removeText();
    }
    else if(gameStep == 2){
        if(gameDelay < 24*3){
            gameDelay++;
            setcurpl(getuserplayerid());
            t.insert(0);
            t.appendf("\n\n\x13\x1CROUND {}/{}\n\n", nextIndex, v.gameQuestion);
            t.appendf("\x13\x04이 유즈맵에 있는 단어들은\n");
            t.appendf("\x13\x1E국립국어원 표준국어대사전\x04에\n");
            t.appendf("\x13\x04있는 단어들만 사용했어요.\n");
            t.appendf("\x13\x04그 수는 무려, {}단어!", sw.wordMAX);
            t.DisplayAt(0);
            setcurpl(v.superUser);
        }
        else{gameDelay = 0; gameStep += 1;}
    }
    else if(gameStep == 3){
        SetCountdownTimer(SetTo, v.gameTimer);
        foreach(cp : EUDLoopPlayer("Human")){
            setcurpl(cp);
            ski.keywordUpdate[cp] = 1;
            skb.keyboardUpdate[cp] = 1;
            SetDeaths(cp, SetTo, 1, "A Check");
        }
        gameStep += 1;
    }
    else if(gameStep == 4){
        foreach(cp : EUDLoopPlayer("Human")){
            setcurpl(cp);
            ski.keyInputSystem(cp);
        }
        if(Deaths(Force1, Exactly, 0, "A Check") || CountdownTimer(Exactly, 0)){
            SetCountdownTimer(SetTo, 0);
            gameStep += 1;
        }
    }
    else if(gameStep == 5){
        removeText();
        gameStep += 1;
    }
    else if(gameStep == 6){
        setcurpl(getuserplayerid());
        if(psb.printScoreBoard()){
            setcurpl(v.superUser);
            gameStep += 1;
        }
    }
    else if(gameStep == 7){
        psb.resetScoreData();
        ski.resetKeywordData();
        gameStep = 1;
    }
}