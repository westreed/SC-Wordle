import System.keyInput as ski;
import System.word as sw;
import variables as v;

var   clear         = 0;
var   leader        = 0;
var   scoreStep     = 0;
var   scoreDelay    = 0;
const myScore       = PVariable();
const scoreLeader   = PVariable(); //점수에 따른 순위
const clearOrder    = PVariable();
const clearScore    = PVariable();
const answerScore   = [10, 8, 7, 5, 3, 2, 1, 0];
const lineScore     = [5, 4, 3, 2, 1, 0];

const t = StringBuffer();

function scoreInit(){
    LeaderBoardScore(Custom, "\x1FS\x1Cc\x04ore");
}

function addScore(cp, value){
    myScore[cp] += value;
    SetScore(cp, Add, value, Custom);
}

function resetScoreData(){
    clear = 0;
    scoreStep = 0;
    scoreDelay= 0;
    for (var i=0; i<8; i++){
        clearOrder[i] = 0;
        clearScore[i] = 0;
    }
}

function calculateScore(cp, clearLine){
    clearOrder[clear] = cp+1;
    const scoreValue = answerScore[clear]+lineScore[clearLine];
    clearScore[cp] = scoreValue;
    addScore(cp, scoreValue);
    clear ++;
    eprintf("\x17{}등\x04으로 \x08성공\x04하셨습니다! \x1C+{}점",clear, scoreValue);
    PlayWAV("staredit\\wav\\getitem3.wav");
}

function calculateLeader(){
    foreach(cp : EUDLoopPlayer("Human")){
        scoreLeader[cp] = 0;
        SetScore(cp, SetTo, myScore[cp], Kills);
    }
    var lead = 1;
    for(var i=0; i<v.userNumber; i++){
        var addv = 0;
        foreach(cp : EUDLoopPlayer("Human")){
            setcurpl(cp);
            if(HighestScore(Kills)){
                scoreLeader[cp] = i+1;
                addv ++;
            }
        }
        foreach(cp : EUDLoopPlayer("Human")){
            if(scoreLeader[cp] > 0 && Score(cp, Kills, AtLeast, 1)){
                SetScore(cp, SetTo, 0, Kills);
            }
        }
        lead += addv;
    }
}

function findRank(order){
    for (var i=0; i<8; i++){
        if(clearOrder[i] == order+1){return i+1;}
    }
    return 0;
}

function printScoreBoard(){
    if(scoreStep == 0){
        t.insert(0,"\x13\x04이번 정답은\n");
        t.appendf("\x13\x07＂{:s}＂\x04입니다！\n\n",sw.wordList[ski.question]);
        leader = 0;
        scoreStep = 1;
    }
    else if(scoreStep == 1){
        if(scoreDelay == 24){
            if(clear == 0){
                t.appendf("\n\x13\x1E아무도 맞추지 못했군요..\n");
                t.appendf("\x13\x1EX_X");
                scoreStep = 2;
            }
            else{
                if(leader == v.userNumber){scoreStep = 2;}
                const user = findRank(leader);
                if(user == 0){scoreStep = 2;}
                else{
                    const scoreValue = clearScore[user-1];
                    if(leader == 0){t.appendf("\x13\x08");}
                    else{t.appendf("\x13\x11");}
                    t.appendf("{}등 \x04{:n} \x1C(+{}점)\n",leader+1, user-1, scoreValue);
                    leader ++;
                    scoreDelay = 0;
                }
            }
        }
        else{scoreDelay++;}
    }
    else if(scoreStep == 2){
        scoreDelay = 0;
        scoreStep = 3;
    }
    else if(scoreStep == 3){
        if(scoreDelay < 24*3){scoreDelay++;}
        else{
            scoreDelay = 0;
            scoreStep = 0;
            return true;
        }
    }
    
    t.DisplayAt(0);
    return false;
}